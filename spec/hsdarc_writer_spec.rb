#!/usr/bin/env ruby

require 'minitest/autorun'
require 'minitest/spec'
require 'feh/hsdarc_writer'

describe Feh::HSDArcWriter do
  before do
    @writer = Feh::HSDArcWriter.new
  end

  it 'produces a valid HSDArc header' do
    assert_equal @writer.hsdarc, [
      0x20, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00,
      0x01, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00,
    ]
  end

  it 'accepts integer types' do
    @writer.i64(0x0123456789ABCDEF)
    @writer.i32(0xFEDCBA98)
    @writer.i16(0x7654)
    @writer.i8(0x32)
    @writer.bool(true)
    @writer.i64(-1)
    @writer.i32(-2)
    @writer.i16(-3)
    @writer.i8(-4)
    @writer.bool(false)
    assert_equal @writer.compile, [
      0xEF, 0xCD, 0xAB, 0x89, 0x67, 0x45, 0x23, 0x01,
      0x98, 0xBA, 0xDC, 0xFE, 0x54, 0x76, 0x32, 0x01,
      0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
      0xFE, 0xFF, 0xFF, 0xFF, 0xFD, 0xFF, 0xFC, 0x00,
    ]
  end

  it 'accepts utf-8 strings' do
    @writer.xor_str('abcðŸ˜‚')
    @writer.xor_str('00000000')
    assert_equal @writer.compile, [
      0x61, 0x62, 0x63, 0xF0, 0x9F, 0x98, 0x82, 0x00,
      0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    ]
  end

  it 'accepts xor values' do
    @writer.xor_str('abcðŸ˜‚', [0x01, 0x10])
    @writer.i8(0x0F, 0x33)
    @writer.i8(0x0F, 0x55)
    assert_equal @writer.compile, [
      0x60, 0x72, 0x62, 0xE0, 0x9E, 0x88, 0x83, 0x00,
      0x3C, 0x5A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    ]
  end

  it 'respects alignment' do
    @writer.i8(0x01)
    @writer.i16(0x0202)
    @writer.i64(0x0303030303030303)
    @writer.i32(0x04040404)
    @writer.i16(0x0505)
    @writer.xor_str('a')
    assert_equal @writer.compile, [
      0x01, 0x00, 0x02, 0x02, 0x00, 0x00, 0x00, 0x00,
      0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03,
      0x04, 0x04, 0x04, 0x04, 0x05, 0x05, 0x00, 0x00,
      0x61, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    ]
  end

  it 'accepts sub-blocks' do
    @writer.nullptr
    @writer.ptr do |blk|
      blk.i8(0x01)
    end
    @writer.ptr do |blk|
      blk.i8(0x02)
    end
    assert_equal @writer.compile, [
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    ]
  end

  it 'accepts nested sub-blocks' do
    @writer.nullptr
    @writer.ptr do |blk|
      blk.i8(0x01)
      blk.ptr do |blk2|
        blk2.xor_str('a')
      end
      blk.string('b')
    end
    assert_equal @writer.compile, [
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x28, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x61, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x62, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    ]
    assert_equal @writer.hsdarc.drop(0x20 + 0x38), [
      0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    ]
  end
end
